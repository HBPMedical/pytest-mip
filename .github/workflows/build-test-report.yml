name: MIP Federation Integration Tests Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # schedule:
    # # Runs "at 6:55am every day" (see https://crontab.guru)
    # - cron: '55 6 * * *'
  workflow_call:
    secrets:
      EBRAINSUSERID:
        required: true
      EBRAINSUSERPWD:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Setup project parameters
        run: |
          cat << EOF > $(pwd)/tests/project_parameters.py
          UserID = "$EBRAINSUSERID"
          UserPWD = "$EBRAINSUSERPWD"
          EOF
        env:
          EBRAINSUSERID: ${{ secrets.EBRAINSUSERID }}
          EBRAINSUSERPWD: ${{ secrets.EBRAINSUSERPWD }}
      -
        name: Test
        run: |
          cat $(pwd)/tests/project_parameters.py
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          tags: pytest_mip:latest
          outputs: type=docker,dest=/tmp/pytest_mip.tar
          cache-from: type=gha
          cache-to: type=gha,mode=max
      -
        name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: pytest_mip
          path: /tmp/pytest_mip.tar

  test-report:
    runs-on: ubuntu-latest
    needs: build
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: pytest_mip
          path: /tmp
      -
        name: Load Docker image
        run: |
          docker load --input /tmp/pytest_mip.tar
      -
        name: Run integration tests of the up-and-running MIP federations
        run: |
          mkdir -p report
          docker run -v $(pwd)/report:/app/report -t pytest_mip .
      -
        name: Rename report.html to index.html for GitHub Page
        if: success() || failure()
        run: |
          mv $(pwd)/report/report.html $(pwd)/report/index.html
      - 
        name: Deploy report to GitHub Page
        uses: peaceiris/actions-gh-pages@v3
        if: success() || failure()
        with:
          publish_branch: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: report
          force_orphan: true
